@model CloudSolutions.Surveys.ViewModels.InterviewPageViewModel

<div id="page_wrapper">
    <form method="post" asp-action="Save" asp-controller="Interviews" asp-area="CloudSolutions.Surveys" asp-route-interviewId="@Model.InterviewId" asp-antiforgery="true" id="interview_page_form" class="needs-validation">

        @await DisplayAsync(Model.PageShape)

        @* Display navigation buttons *@
        <div class="d-flex justify-content-between pb-4">
            <input type="hidden" name="Direction" value="Next" id="page_nav_direction" />
            <div>
                @if (Model.CanGoBack)
                {
                    <button type="button" name="Previous" rel="prev" id="page_nav_prev" class="btn btn-success page_nav_submit_button" data-direction="Previous">&larr; @T["Previous Page"]</button>
                }
            </div>

            <div>
                @{
                    string next = T["Next Page"].Value + " &rarr;";
                    string complete = T["Finish"].Value;
                    string text = next;

                    if (Model.IsLastPage)
                    {
                        text = complete;
                    }
                }
                <button type="button" name="Next" rel="next" id="page_nav_next" class="btn btn-success page_nav_submit_button" data-direction="Next" data-original="@Html.Raw(text)" data-next="@Html.Raw(next)" data-complete="@complete">@Html.Raw(text)</button>

            </div>
        </div>

    </form>
</div>

<script at="Foot">
    document.addEventListener('DOMContentLoaded', function () {

        var popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'));

        popoverTriggerList.map(function (popoverTriggerEl) {
            return new bootstrap.Popover(popoverTriggerEl, {
                //container: 'body'
            });
        });


        let form = document.getElementById('interview_page_form');

        let buttons = document.getElementsByClassName('page_nav_submit_button');

        for (let i = 0; i < buttons.length; i++) {
            buttons[i].addEventListener('click', (e) => {

                var button = e.target;

                if (button.id === 'page_nav_prev') {
                    // At this point we know we are navigating to the previous page
                    // Make all required fields optional to allow the user to freely navigate backward

                    //form.find(':input[required]').data('oldRequired', true).removeAttr('required');
                } else {

                    // At this point we can can reset the required attribute
                    //form.find(':input[data-oldRequired]').attr('required', true).removeAttr('data-oldRequired');
                }

                let direction = document.getElementById('page_nav_direction');

                console.log(direction, button.getAttribute('data-direction'))
                direction.value = button.getAttribute('data-direction');

                const submitEvent = new Event("submit", { bubbles: true, cancelable: true });

                form.dispatchEvent(submitEvent);
            });

        }
    });
</script>
