@using ApplicantTest.Models
@model ApplicantTestPart

<!DOCTYPE html>
<html>
<head>
    <style>
        html, body {
            height: 100%;
            width: 100%;
            padding: 0;
            margin: 0;
        }

        .iframe-container {
            width: 100%;
            height: 44rem;
            border: 2px solid black;
        }

            .iframe-container iframe {
                width: 100%;
                height: 100%;
                border: none;
            }

        #startTest {
            margin: 10px;
            padding: 5px 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <script>
        var footsteps = [];
        document.addEventListener('DOMContentLoaded', () => {
            console.log('DOM fully loaded and parsed');

            // Listen for messages from the iframe
            window.addEventListener('message', (event) => {
                console.log('Message received:', event);
                if (event.data && event.data.event === 'emailSent') {
                    console.log('Email sent event captured in the parent document!', event.data.details);
                    footsteps.push({ name: 'emailSent', value: 1 });
                    document.getElementById('Email').value = 1;
                }
                else if (event.data && event.data.event === 'messageSent') {
                    console.log('Message sent event captured in the parent document!', event.data.details);
                    footsteps.push({ name: 'messageSent', value: 1 });
                    switch (event.data.details.selectedUser) {
                        case 'Asako Satoshi':
                            document.getElementById('MessageSentToAsakoSatoshi').value = 1;
                            break;
                        case 'Lily Wang':
                            document.getElementById('MessageSentToLilyWang').value = 1;
                            break;
                        case 'Madison Byers':
                            document.getElementById('MessageSentToMadisonByers').value = 1;
                            break;
                        case 'Dominic Gonzalez':
                            document.getElementById('MessageSentToDominicGonzalez').value = 1;
                            break;
                        case 'Simone Khan':
                            document.getElementById('MessageSentToSimoneKhan').value = 1;
                            break;
                        default:
                            console.error('Unknown user:', event.data.details.selectedUser);
                    }
                }
                else if (event.data && event.data.event === 'bookmarkClicked') {
                    console.log('Bookmark clicked event captured in the parent document!', event.data.details);
                    footsteps.push({ name: 'bookmarkClicked', value: 1 });
                    document.getElementById('BookMarkClicked').value = 1;
                }
                else if (event.data && event.data.event === 'formSubmitted') {
                    console.log('RDIForm submitted event captured in the parent document!', event.data.details);
                    footsteps.push({ name: 'formSubmitted', value: 1 });
                    document.getElementById('formSubmitted').value = 1;
                }
                else {
                    console.log('Unknown event received:', event.data);
                }
                console.log('Current footsteps array:', footsteps);
            });

            document.getElementById('startTest').addEventListener('click', () => {
                const userNameElement = document.getElementById('UserName');
                if (userNameElement) {
                    console.log('Test started for user:', userNameElement.value);
                    footsteps.push({ name: 'startTest', value: userNameElement.value });
                } else {
                    console.error('Element with ID "UserName" not found');
                }
            });

            document.getElementById('finishTest').addEventListener('click', () => {
                const formData = new FormData(document.querySelector('form'));
                formData.forEach((value, key) => {
                    console.log(`${key}: ${value}`);
                });
            });
        });

    </script>

    <div class="iframe-container">
        <iframe src="/ApplicantTest/ApplicantTest/index.html" onload="console.log('iFrame loaded successfully.')" onerror="console.error('Error loading iFrame.');"></iframe>
    </div>

    <form method="post">
        @Html.AntiForgeryToken()
        <input type="number" id="Email" name="Email" value="0" onerror="console.error('error capturing email')" />
        <input type="number" id="MessageSentToAsakoSatoshi" name="MessageSentToAsakoSatoshi" value="0" onerror="console.error('messagefail')" />
        <input type="number" id="MessageSentToLilyWang" name="MessageSentToLilyWang" value="0" style="display:none;" onerror="console.error('messagefail')" />
        <input type="number" id="MessageSentToMadisonByers" name="MessageSentToMadisonByers" value="0" style="display:none;" onerror="console.error('messagefail')" />
        <input type="number" id="MessageSentToDominicGonzalez" name="MessageSentToDominicGonzalez" value="0" style="display:none;" onerror="console.error('messagefail')" />
        <input type="number" id="MessageSentToSimoneKhan" name="MessageSentToSimoneKhan" value="0" style="display:none;" onerror="console.error('messagefail')" />
        <input type="number" id="BookMarkClicked" name="BookMarkClicked" value="0" onerror="console.error('bookmarkfail')" />
        <input type="number" id="formSubmitted" name="formSubmitted" value="0" style="display:none;" onerror="console.error('formsumbit error')" />
        <input type="text" id="UserName" name="UserName" placeholder="Enter your username" required onerror="console.error('Username fail')" />
        <button type="button" id="startTest">Start Test</button>
        <button type="button" id="finishTest">Finish Test</button>
    </form>

</body>
</html>
